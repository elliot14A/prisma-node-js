datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  email            String             @unique
  firstName        String
  lastName         String
  social           Json?
  CourseEnrollment CourseEnrollment[]
  testResults      TestResult[]       @relation(name: "results")
  testsGraded      TestResult[]       @relation(name: "graded")
}

model Course {
  id               Int                @id @default(autoincrement())
  name             String
  courseDetails    String
  CourseEnrollment CourseEnrollment[]
  tests            Test[]
}

model Test {
  id          Int          @id @default(autoincrement())
  updateAt    DateTime     @updatedAt
  name        String
  date        DateTime
  courseId    Int
  course      Course       @relation(fields: [courseId], references: [id])
  testResults TestResult[]
}

model TestResult {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now())
  result    Int
  Test      Test     @relation(fields: [testId], references: [id])
  testId    Int
  studentId Int
  student   User     @relation(name: "results", fields: [studentId], references: [id])
  graderId  Int
  gradedBy  User     @relation(name: "graded", fields: [graderId], references: [id])
}

enum UserRole {
  STUDENT
  TEACHER
}

model CourseEnrollment {
  createdAt DateTime @default(now())
  role      UserRole
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])

  @@id([userId, courseId])
  @@index([userId, role])
}

generator client {
  provider = "prisma-client-js"
}